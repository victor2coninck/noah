"Fais-toi une arche en bois résineux, tu la feras en roseaux et tu l'enduiras
de bitume en dedans et en dehors.

Entre dans l'arche, toi et toute ta famille, car je t'ai vu seul juste à mes 
yeux parmi cette génération. 

De tous les animaux purs, tu prendras sept paires, le mâle et la femelle; des
animaux qui ne sont pas purs, tu prendras un couple, le mâle et la femelle et
aussi des oiseaux du ciel, sept paires, le mâle et la femelle, pour perpétuer
la race sur toute la terre." - Genèse 6,7.



[SUJET]
L'Arche de Noé.
Sujet de recrutement Solutech : Evalutation Technique.

Ce projet décrit l'implementation d'une série de classes décrivant l'histoire de
l'Arche de Noé et sa gestion des ressources par son capitaine Noé (Noah).
L'application va tout d'abord parser le fichier de données pour en extraire les
conditions initiales, à savoir, les différentes espèces d'animaux qui embarqueront
sur l'arche ainsi que le nombre de ressources que Noé chargera dans les stocks
de nourriture de l'arche.
S'en suit une simulation des jours qui passeront sur l'arche avec à chaque journée
son lot d'évènements.

Les commentaires, les noms de classe, de fonction ainsi que les noms des differents attributs
on été écrit en anglais.

Un fichier input_data est présent au même niveau que ce README. Il amène un gameover
au bout d'environ 13 jours.


[PREREQUIS]
> Java 8
> Maven



[UTILISATION]

COMPILER LE PROGRAMME:
shell# mvn package -f "pom.xml"
(pom.xml est au même niveau que ce README)

LANCER LE PROGRAMME:
shell# java -jar target/noah-1.jar [input_data_filename]

FORMAT FICHIER INPUT DATA:
1 ère ligne                                : "qte_viande qte_herbe"
lignes suivantes, une ligne par espèce     : "t:espece:poids"

avec    t       = "h" ou "c" (herbivore ou carnivore)
        espece  = nom de l'espece
        poids    = poids du male (le poids de la femelle sera une fraction de ce poids)



[ETAT DE L'ART ACTUEL]
    J'ai choisi de me concentrer sur la représentation et la gestion de la
nourriture dans l'arche. En effet, la problématique principale de Noé est la
survie de ses pensionnaires.
Ces derniers sont donc divisés en deux catégories : Carnivore mangeant de la
viande (donc potentielement d'autre animaux) et Herbivore mangeant du foin.
Si il n'y a plus rien à manger la simulation se termine.

Chaque animal mange une fraction de son poid.
Chaque animal peut se reproduire et ainsi donner naissance à un nouvel animal
de la même espèce, si les conditions sont propices.
Noé peut pecher, planter du foin, élever des animaux.

La simulation continue tant que le gameover n'a pas été atteint (stock viande et
herbe en dessous de 3kg chacun)



[INNOVATION]
    Code :
        - enumeration sur les ratios de consommation de nourriture et d'autre donnée
          utile à l'etalonnage/équilibrage de la simulation.
        - implementation du design pattern Observer pour remplacer tout les 
          println par des notifications à un Listener qui pourra logger/afficher
          une interface ou simplement les logs.
        - gestion d'erreurs sur le parsing
        - + de gestion d'exception (try/catch)
        - multithreader les opérations bloquantes (Noah.fish / Noah.crope)
        - templater certaines fonctions comme Animal.breed(Animal);

    Simulation :
        - Les actions que Noé effectue consomment de sa stamina, il doit manger
          pour remplir sa stamina, si il n'a pas suffisament de stamina il ne peut
          pas effectuer l'action voulue.
        - Les animaux meurent et disparaissent si on ne les nourrit pas pendant
          un certain temps
        - S'il n'est pas nourrit assez, un carnivore pourra aller tuer et manger
          un herbivore pendant la nuit.
        - Un nouveau née met un certain temps avant de pouvoir être transformé
          en viande.
        - Faire pousser du foin met du temps, on ne peut alors le recolter tout
          de suite

    Application :
        - La simulation pourrait se transformer en un jeu de gestion dans lequel
          on controllerai Noé (et sa famille)  gérant l'arche. L'utilisateur
          choisira les actions que la divine famille effectuera.
        - Autrement, si dans l'histoire on incarne Dieu à travers une interface
          permettant de modifier en live certains réglages de l'arche on pourrai 
          influencer directement sur la vie de l'arche et sur le comportement
          de la simulation.


[CONTACT]
victor.de-coninck@epita.fr
